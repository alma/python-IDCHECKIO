diff --git a/idcheckio_python_client/__init__.py b/idcheckio_python_client/__init__.py
index 8212da5..7c02efe 100644
--- a/idcheckio_python_client/__init__.py
+++ b/idcheckio_python_client/__init__.py
@@ -22,7 +22,7 @@
     limitations under the License.
 """
 
-from __future__ import absolute_import
+
 
 # import models into sdk package
 from .models.check_summary_of_the_submitted_document import CheckSummaryOfTheSubmittedDocument
diff --git a/idcheckio_python_client/api_client.py b/idcheckio_python_client/api_client.py
index ddfaf2c..8c3cf32 100644
--- a/idcheckio_python_client/api_client.py
+++ b/idcheckio_python_client/api_client.py
@@ -18,7 +18,7 @@ Copyright 2016 SmartBear Software
    ref: https://github.com/swagger-api/swagger-codegen
 """
 
-from __future__ import absolute_import
+
 from . import models
 from .rest import RESTClientObject
 from .rest import ApiException
@@ -26,7 +26,7 @@ from .rest import ApiException
 import os
 import re
 import sys
-import urllib
+import urllib.request, urllib.parse, urllib.error
 import json
 import mimetypes
 import random
@@ -44,12 +44,12 @@ try:
     from urllib.parse import quote
 except ImportError:
     # for python2
-    from urllib import quote
+    from urllib.parse import quote
 
 # special handling of `long` (python2 only)
 try:
     # Python 2
-    long
+    int
 except NameError:
     # Python 3
     long = int
@@ -201,9 +201,9 @@ class ApiClient(object):
         :param obj: The data to serialize.
         :return: The serialized form of data.
         """
-        types = (str, int, long, float, bool, tuple)
+        types = (str, int, int, float, bool, tuple)
         if sys.version_info < (3, 0):
-            types = types + (unicode,)
+            types = types + (str,)
         if isinstance(obj, type(None)):
             return None
         elif isinstance(obj, types):
@@ -284,7 +284,7 @@ class ApiClient(object):
             else:
                 klass = eval('models.' + klass)
 
-        if klass in [int, long, float, str, bool]:
+        if klass in [int, int, float, str, bool]:
             return self.__deserialize_primitive(data, klass)
         elif klass == object:
             return self.__deserialize_object(data)
@@ -429,7 +429,7 @@ class ApiClient(object):
         if not accepts:
             return
 
-        accepts = list(map(lambda x: x.lower(), accepts))
+        accepts = list([x.lower() for x in accepts])
 
         if 'application/json' in accepts:
             return 'application/json'
@@ -446,7 +446,7 @@ class ApiClient(object):
         if not content_types:
             return 'application/json'
 
-        content_types = list(map(lambda x: x.lower(), content_types))
+        content_types = list([x.lower() for x in content_types])
 
         if 'application/json' in content_types:
             return 'application/json'
@@ -518,7 +518,7 @@ class ApiClient(object):
         try:
             value = klass(data)
         except UnicodeEncodeError:
-            value = unicode(data)
+            value = str(data)
         except TypeError:
             value = data
         return value
diff --git a/idcheckio_python_client/apis/__init__.py b/idcheckio_python_client/apis/__init__.py
index 954f9e3..283901e 100644
--- a/idcheckio_python_client/apis/__init__.py
+++ b/idcheckio_python_client/apis/__init__.py
@@ -1,4 +1,4 @@
-from __future__ import absolute_import
+
 
 # import apis into api package
 from .administration_api import AdministrationApi
diff --git a/idcheckio_python_client/apis/administration_api.py b/idcheckio_python_client/apis/administration_api.py
index 16fb8d7..ca25158 100644
--- a/idcheckio_python_client/apis/administration_api.py
+++ b/idcheckio_python_client/apis/administration_api.py
@@ -22,7 +22,7 @@
     limitations under the License.
 """
 
-from __future__ import absolute_import
+
 
 import sys
 import os
diff --git a/idcheckio_python_client/apis/analysis_api.py b/idcheckio_python_client/apis/analysis_api.py
index 8b8d8a9..0adcd04 100644
--- a/idcheckio_python_client/apis/analysis_api.py
+++ b/idcheckio_python_client/apis/analysis_api.py
@@ -22,7 +22,7 @@
     limitations under the License.
 """
 
-from __future__ import absolute_import
+
 
 import sys
 import os
diff --git a/idcheckio_python_client/apis/sandbox_api.py b/idcheckio_python_client/apis/sandbox_api.py
index ccbd720..ef025c6 100644
--- a/idcheckio_python_client/apis/sandbox_api.py
+++ b/idcheckio_python_client/apis/sandbox_api.py
@@ -22,7 +22,7 @@
     limitations under the License.
 """
 
-from __future__ import absolute_import
+
 
 import sys
 import os
diff --git a/idcheckio_python_client/configuration.py b/idcheckio_python_client/configuration.py
index ad05c97..3370f30 100644
--- a/idcheckio_python_client/configuration.py
+++ b/idcheckio_python_client/configuration.py
@@ -22,12 +22,12 @@
     limitations under the License.
 """
 
-from __future__ import absolute_import
+
 import base64
 import urllib3
 
 try:
-    import httplib
+    import http.client
 except ImportError:
     # for python3
     import http.client as httplib
@@ -161,14 +161,14 @@ class Configuration(object):
             for _, logger in iteritems(self.logger):
                 logger.setLevel(logging.DEBUG)
             # turn on httplib debug
-            httplib.HTTPConnection.debuglevel = 1
+            http.client.HTTPConnection.debuglevel = 1
         else:
             # if debug status is False, turn off debug logging,
             # setting log level to default `logging.WARNING`
             for _, logger in iteritems(self.logger):
                 logger.setLevel(logging.WARNING)
             # turn off httplib debug
-            httplib.HTTPConnection.debuglevel = 0
+            http.client.HTTPConnection.debuglevel = 0
 
     @property
     def logger_format(self):
diff --git a/idcheckio_python_client/models/__init__.py b/idcheckio_python_client/models/__init__.py
index a928fab..151ffc5 100644
--- a/idcheckio_python_client/models/__init__.py
+++ b/idcheckio_python_client/models/__init__.py
@@ -22,7 +22,7 @@
     limitations under the License.
 """
 
-from __future__ import absolute_import
+
 
 # import models into model package
 from .check_summary_of_the_submitted_document import CheckSummaryOfTheSubmittedDocument
diff --git a/idcheckio_python_client/models/check_summary_of_the_submitted_document.py b/idcheckio_python_client/models/check_summary_of_the_submitted_document.py
index 2fedc25..06ea750 100644
--- a/idcheckio_python_client/models/check_summary_of_the_submitted_document.py
+++ b/idcheckio_python_client/models/check_summary_of_the_submitted_document.py
@@ -83,18 +83,12 @@ class CheckSummaryOfTheSubmittedDocument(object):
         for attr, _ in iteritems(self.swagger_types):
             value = getattr(self, attr)
             if isinstance(value, list):
-                result[attr] = list(map(
-                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
-                    value
-                ))
+                result[attr] = list([x.to_dict() if hasattr(x, "to_dict") else x for x in value])
             elif hasattr(value, "to_dict"):
                 result[attr] = value.to_dict()
             elif isinstance(value, dict):
-                result[attr] = dict(map(
-                    lambda item: (item[0], item[1].to_dict())
-                    if hasattr(item[1], "to_dict") else item,
-                    value.items()
-                ))
+                result[attr] = dict([(item[0], item[1].to_dict())
+                    if hasattr(item[1], "to_dict") else item for item in list(value.items())])
             else:
                 result[attr] = value
 
diff --git a/idcheckio_python_client/models/classification_of_the_submitted_document.py b/idcheckio_python_client/models/classification_of_the_submitted_document.py
index c62e677..b756b67 100644
--- a/idcheckio_python_client/models/classification_of_the_submitted_document.py
+++ b/idcheckio_python_client/models/classification_of_the_submitted_document.py
@@ -89,18 +89,12 @@ class ClassificationOfTheSubmittedDocument(object):
         for attr, _ in iteritems(self.swagger_types):
             value = getattr(self, attr)
             if isinstance(value, list):
-                result[attr] = list(map(
-                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
-                    value
-                ))
+                result[attr] = list([x.to_dict() if hasattr(x, "to_dict") else x for x in value])
             elif hasattr(value, "to_dict"):
                 result[attr] = value.to_dict()
             elif isinstance(value, dict):
-                result[attr] = dict(map(
-                    lambda item: (item[0], item[1].to_dict())
-                    if hasattr(item[1], "to_dict") else item,
-                    value.items()
-                ))
+                result[attr] = dict([(item[0], item[1].to_dict())
+                    if hasattr(item[1], "to_dict") else item for item in list(value.items())])
             else:
                 result[attr] = value
 
diff --git a/idcheckio_python_client/models/control.py b/idcheckio_python_client/models/control.py
index 4dad1ed..4b6b915 100644
--- a/idcheckio_python_client/models/control.py
+++ b/idcheckio_python_client/models/control.py
@@ -167,18 +167,12 @@ class Control(object):
         for attr, _ in iteritems(self.swagger_types):
             value = getattr(self, attr)
             if isinstance(value, list):
-                result[attr] = list(map(
-                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
-                    value
-                ))
+                result[attr] = list([x.to_dict() if hasattr(x, "to_dict") else x for x in value])
             elif hasattr(value, "to_dict"):
                 result[attr] = value.to_dict()
             elif isinstance(value, dict):
-                result[attr] = dict(map(
-                    lambda item: (item[0], item[1].to_dict())
-                    if hasattr(item[1], "to_dict") else item,
-                    value.items()
-                ))
+                result[attr] = dict([(item[0], item[1].to_dict())
+                    if hasattr(item[1], "to_dict") else item for item in list(value.items())])
             else:
                 result[attr] = value
 
diff --git a/idcheckio_python_client/models/control_group.py b/idcheckio_python_client/models/control_group.py
index bb68443..275dae0 100644
--- a/idcheckio_python_client/models/control_group.py
+++ b/idcheckio_python_client/models/control_group.py
@@ -193,18 +193,12 @@ class ControlGroup(object):
         for attr, _ in iteritems(self.swagger_types):
             value = getattr(self, attr)
             if isinstance(value, list):
-                result[attr] = list(map(
-                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
-                    value
-                ))
+                result[attr] = list([x.to_dict() if hasattr(x, "to_dict") else x for x in value])
             elif hasattr(value, "to_dict"):
                 result[attr] = value.to_dict()
             elif isinstance(value, dict):
-                result[attr] = dict(map(
-                    lambda item: (item[0], item[1].to_dict())
-                    if hasattr(item[1], "to_dict") else item,
-                    value.items()
-                ))
+                result[attr] = dict([(item[0], item[1].to_dict())
+                    if hasattr(item[1], "to_dict") else item for item in list(value.items())])
             else:
                 result[attr] = value
 
diff --git a/idcheckio_python_client/models/detailed_information_of_the_holder_of_the_submitted_document.py b/idcheckio_python_client/models/detailed_information_of_the_holder_of_the_submitted_document.py
index 308f364..c0e4d4b 100644
--- a/idcheckio_python_client/models/detailed_information_of_the_holder_of_the_submitted_document.py
+++ b/idcheckio_python_client/models/detailed_information_of_the_holder_of_the_submitted_document.py
@@ -317,18 +317,12 @@ class DetailedInformationOfTheHolderOfTheSubmittedDocument(object):
         for attr, _ in iteritems(self.swagger_types):
             value = getattr(self, attr)
             if isinstance(value, list):
-                result[attr] = list(map(
-                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
-                    value
-                ))
+                result[attr] = list([x.to_dict() if hasattr(x, "to_dict") else x for x in value])
             elif hasattr(value, "to_dict"):
                 result[attr] = value.to_dict()
             elif isinstance(value, dict):
-                result[attr] = dict(map(
-                    lambda item: (item[0], item[1].to_dict())
-                    if hasattr(item[1], "to_dict") else item,
-                    value.items()
-                ))
+                result[attr] = dict([(item[0], item[1].to_dict())
+                    if hasattr(item[1], "to_dict") else item for item in list(value.items())])
             else:
                 result[attr] = value
 
diff --git a/idcheckio_python_client/models/detailed_information_of_the_submitted_document.py b/idcheckio_python_client/models/detailed_information_of_the_submitted_document.py
index 9d241ee..8f6a00a 100644
--- a/idcheckio_python_client/models/detailed_information_of_the_submitted_document.py
+++ b/idcheckio_python_client/models/detailed_information_of_the_submitted_document.py
@@ -187,18 +187,12 @@ class DetailedInformationOfTheSubmittedDocument(object):
         for attr, _ in iteritems(self.swagger_types):
             value = getattr(self, attr)
             if isinstance(value, list):
-                result[attr] = list(map(
-                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
-                    value
-                ))
+                result[attr] = list([x.to_dict() if hasattr(x, "to_dict") else x for x in value])
             elif hasattr(value, "to_dict"):
                 result[attr] = value.to_dict()
             elif isinstance(value, dict):
-                result[attr] = dict(map(
-                    lambda item: (item[0], item[1].to_dict())
-                    if hasattr(item[1], "to_dict") else item,
-                    value.items()
-                ))
+                result[attr] = dict([(item[0], item[1].to_dict())
+                    if hasattr(item[1], "to_dict") else item for item in list(value.items())])
             else:
                 result[attr] = value
 
diff --git a/idcheckio_python_client/models/error_response.py b/idcheckio_python_client/models/error_response.py
index 0cbf979..9322cc3 100644
--- a/idcheckio_python_client/models/error_response.py
+++ b/idcheckio_python_client/models/error_response.py
@@ -83,18 +83,12 @@ class ErrorResponse(object):
         for attr, _ in iteritems(self.swagger_types):
             value = getattr(self, attr)
             if isinstance(value, list):
-                result[attr] = list(map(
-                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
-                    value
-                ))
+                result[attr] = list([x.to_dict() if hasattr(x, "to_dict") else x for x in value])
             elif hasattr(value, "to_dict"):
                 result[attr] = value.to_dict()
             elif isinstance(value, dict):
-                result[attr] = dict(map(
-                    lambda item: (item[0], item[1].to_dict())
-                    if hasattr(item[1], "to_dict") else item,
-                    value.items()
-                ))
+                result[attr] = dict([(item[0], item[1].to_dict())
+                    if hasattr(item[1], "to_dict") else item for item in list(value.items())])
             else:
                 result[attr] = value
 
diff --git a/idcheckio_python_client/models/event_date.py b/idcheckio_python_client/models/event_date.py
index a69d71e..fb462af 100644
--- a/idcheckio_python_client/models/event_date.py
+++ b/idcheckio_python_client/models/event_date.py
@@ -135,18 +135,12 @@ class EventDate(object):
         for attr, _ in iteritems(self.swagger_types):
             value = getattr(self, attr)
             if isinstance(value, list):
-                result[attr] = list(map(
-                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
-                    value
-                ))
+                result[attr] = list([x.to_dict() if hasattr(x, "to_dict") else x for x in value])
             elif hasattr(value, "to_dict"):
                 result[attr] = value.to_dict()
             elif isinstance(value, dict):
-                result[attr] = dict(map(
-                    lambda item: (item[0], item[1].to_dict())
-                    if hasattr(item[1], "to_dict") else item,
-                    value.items()
-                ))
+                result[attr] = dict([(item[0], item[1].to_dict())
+                    if hasattr(item[1], "to_dict") else item for item in list(value.items())])
             else:
                 result[attr] = value
 
diff --git a/idcheckio_python_client/models/extracted_image.py b/idcheckio_python_client/models/extracted_image.py
index c560f46..957e567 100644
--- a/idcheckio_python_client/models/extracted_image.py
+++ b/idcheckio_python_client/models/extracted_image.py
@@ -219,18 +219,12 @@ class ExtractedImage(object):
         for attr, _ in iteritems(self.swagger_types):
             value = getattr(self, attr)
             if isinstance(value, list):
-                result[attr] = list(map(
-                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
-                    value
-                ))
+                result[attr] = list([x.to_dict() if hasattr(x, "to_dict") else x for x in value])
             elif hasattr(value, "to_dict"):
                 result[attr] = value.to_dict()
             elif isinstance(value, dict):
-                result[attr] = dict(map(
-                    lambda item: (item[0], item[1].to_dict())
-                    if hasattr(item[1], "to_dict") else item,
-                    value.items()
-                ))
+                result[attr] = dict([(item[0], item[1].to_dict())
+                    if hasattr(item[1], "to_dict") else item for item in list(value.items())])
             else:
                 result[attr] = value
 
diff --git a/idcheckio_python_client/models/generic_data.py b/idcheckio_python_client/models/generic_data.py
index 09c2291..2bb9180 100644
--- a/idcheckio_python_client/models/generic_data.py
+++ b/idcheckio_python_client/models/generic_data.py
@@ -135,18 +135,12 @@ class GenericData(object):
         for attr, _ in iteritems(self.swagger_types):
             value = getattr(self, attr)
             if isinstance(value, list):
-                result[attr] = list(map(
-                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
-                    value
-                ))
+                result[attr] = list([x.to_dict() if hasattr(x, "to_dict") else x for x in value])
             elif hasattr(value, "to_dict"):
                 result[attr] = value.to_dict()
             elif isinstance(value, dict):
-                result[attr] = dict(map(
-                    lambda item: (item[0], item[1].to_dict())
-                    if hasattr(item[1], "to_dict") else item,
-                    value.items()
-                ))
+                result[attr] = dict([(item[0], item[1].to_dict())
+                    if hasattr(item[1], "to_dict") else item for item in list(value.items())])
             else:
                 result[attr] = value
 
diff --git a/idcheckio_python_client/models/health_response.py b/idcheckio_python_client/models/health_response.py
index 6cbf2bd..909d180 100644
--- a/idcheckio_python_client/models/health_response.py
+++ b/idcheckio_python_client/models/health_response.py
@@ -89,18 +89,12 @@ class HealthResponse(object):
         for attr, _ in iteritems(self.swagger_types):
             value = getattr(self, attr)
             if isinstance(value, list):
-                result[attr] = list(map(
-                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
-                    value
-                ))
+                result[attr] = list([x.to_dict() if hasattr(x, "to_dict") else x for x in value])
             elif hasattr(value, "to_dict"):
                 result[attr] = value.to_dict()
             elif isinstance(value, dict):
-                result[attr] = dict(map(
-                    lambda item: (item[0], item[1].to_dict())
-                    if hasattr(item[1], "to_dict") else item,
-                    value.items()
-                ))
+                result[attr] = dict([(item[0], item[1].to_dict())
+                    if hasattr(item[1], "to_dict") else item for item in list(value.items())])
             else:
                 result[attr] = value
 
diff --git a/idcheckio_python_client/models/image.py b/idcheckio_python_client/models/image.py
index 5961d52..6a85a4d 100644
--- a/idcheckio_python_client/models/image.py
+++ b/idcheckio_python_client/models/image.py
@@ -185,18 +185,12 @@ class Image(object):
         for attr, _ in iteritems(self.swagger_types):
             value = getattr(self, attr)
             if isinstance(value, list):
-                result[attr] = list(map(
-                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
-                    value
-                ))
+                result[attr] = list([x.to_dict() if hasattr(x, "to_dict") else x for x in value])
             elif hasattr(value, "to_dict"):
                 result[attr] = value.to_dict()
             elif isinstance(value, dict):
-                result[attr] = dict(map(
-                    lambda item: (item[0], item[1].to_dict())
-                    if hasattr(item[1], "to_dict") else item,
-                    value.items()
-                ))
+                result[attr] = dict([(item[0], item[1].to_dict())
+                    if hasattr(item[1], "to_dict") else item for item in list(value.items())])
             else:
                 result[attr] = value
 
diff --git a/idcheckio_python_client/models/image_indicator.py b/idcheckio_python_client/models/image_indicator.py
index e181660..50c27f9 100644
--- a/idcheckio_python_client/models/image_indicator.py
+++ b/idcheckio_python_client/models/image_indicator.py
@@ -167,18 +167,12 @@ class ImageIndicator(object):
         for attr, _ in iteritems(self.swagger_types):
             value = getattr(self, attr)
             if isinstance(value, list):
-                result[attr] = list(map(
-                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
-                    value
-                ))
+                result[attr] = list([x.to_dict() if hasattr(x, "to_dict") else x for x in value])
             elif hasattr(value, "to_dict"):
                 result[attr] = value.to_dict()
             elif isinstance(value, dict):
-                result[attr] = dict(map(
-                    lambda item: (item[0], item[1].to_dict())
-                    if hasattr(item[1], "to_dict") else item,
-                    value.items()
-                ))
+                result[attr] = dict([(item[0], item[1].to_dict())
+                    if hasattr(item[1], "to_dict") else item for item in list(value.items())])
             else:
                 result[attr] = value
 
diff --git a/idcheckio_python_client/models/image_list_response.py b/idcheckio_python_client/models/image_list_response.py
index 08cc225..a1a1522 100644
--- a/idcheckio_python_client/models/image_list_response.py
+++ b/idcheckio_python_client/models/image_list_response.py
@@ -83,18 +83,12 @@ class ImageListResponse(object):
         for attr, _ in iteritems(self.swagger_types):
             value = getattr(self, attr)
             if isinstance(value, list):
-                result[attr] = list(map(
-                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
-                    value
-                ))
+                result[attr] = list([x.to_dict() if hasattr(x, "to_dict") else x for x in value])
             elif hasattr(value, "to_dict"):
                 result[attr] = value.to_dict()
             elif isinstance(value, dict):
-                result[attr] = dict(map(
-                    lambda item: (item[0], item[1].to_dict())
-                    if hasattr(item[1], "to_dict") else item,
-                    value.items()
-                ))
+                result[attr] = dict([(item[0], item[1].to_dict())
+                    if hasattr(item[1], "to_dict") else item for item in list(value.items())])
             else:
                 result[attr] = value
 
diff --git a/idcheckio_python_client/models/image_request.py b/idcheckio_python_client/models/image_request.py
index d74e350..f62bf9e 100644
--- a/idcheckio_python_client/models/image_request.py
+++ b/idcheckio_python_client/models/image_request.py
@@ -317,18 +317,12 @@ class ImageRequest(object):
         for attr, _ in iteritems(self.swagger_types):
             value = getattr(self, attr)
             if isinstance(value, list):
-                result[attr] = list(map(
-                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
-                    value
-                ))
+                result[attr] = list([x.to_dict() if hasattr(x, "to_dict") else x for x in value])
             elif hasattr(value, "to_dict"):
                 result[attr] = value.to_dict()
             elif isinstance(value, dict):
-                result[attr] = dict(map(
-                    lambda item: (item[0], item[1].to_dict())
-                    if hasattr(item[1], "to_dict") else item,
-                    value.items()
-                ))
+                result[attr] = dict([(item[0], item[1].to_dict())
+                    if hasattr(item[1], "to_dict") else item for item in list(value.items())])
             else:
                 result[attr] = value
 
diff --git a/idcheckio_python_client/models/mrz.py b/idcheckio_python_client/models/mrz.py
index eb970a3..db2bff4 100644
--- a/idcheckio_python_client/models/mrz.py
+++ b/idcheckio_python_client/models/mrz.py
@@ -135,18 +135,12 @@ class Mrz(object):
         for attr, _ in iteritems(self.swagger_types):
             value = getattr(self, attr)
             if isinstance(value, list):
-                result[attr] = list(map(
-                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
-                    value
-                ))
+                result[attr] = list([x.to_dict() if hasattr(x, "to_dict") else x for x in value])
             elif hasattr(value, "to_dict"):
                 result[attr] = value.to_dict()
             elif isinstance(value, dict):
-                result[attr] = dict(map(
-                    lambda item: (item[0], item[1].to_dict())
-                    if hasattr(item[1], "to_dict") else item,
-                    value.items()
-                ))
+                result[attr] = dict([(item[0], item[1].to_dict())
+                    if hasattr(item[1], "to_dict") else item for item in list(value.items())])
             else:
                 result[attr] = value
 
diff --git a/idcheckio_python_client/models/mrz_list_response.py b/idcheckio_python_client/models/mrz_list_response.py
index ec9c680..b104a98 100644
--- a/idcheckio_python_client/models/mrz_list_response.py
+++ b/idcheckio_python_client/models/mrz_list_response.py
@@ -83,18 +83,12 @@ class MrzListResponse(object):
         for attr, _ in iteritems(self.swagger_types):
             value = getattr(self, attr)
             if isinstance(value, list):
-                result[attr] = list(map(
-                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
-                    value
-                ))
+                result[attr] = list([x.to_dict() if hasattr(x, "to_dict") else x for x in value])
             elif hasattr(value, "to_dict"):
                 result[attr] = value.to_dict()
             elif isinstance(value, dict):
-                result[attr] = dict(map(
-                    lambda item: (item[0], item[1].to_dict())
-                    if hasattr(item[1], "to_dict") else item,
-                    value.items()
-                ))
+                result[attr] = dict([(item[0], item[1].to_dict())
+                    if hasattr(item[1], "to_dict") else item for item in list(value.items())])
             else:
                 result[attr] = value
 
diff --git a/idcheckio_python_client/models/mrz_request.py b/idcheckio_python_client/models/mrz_request.py
index 006a7e3..6439cc5 100644
--- a/idcheckio_python_client/models/mrz_request.py
+++ b/idcheckio_python_client/models/mrz_request.py
@@ -161,18 +161,12 @@ class MrzRequest(object):
         for attr, _ in iteritems(self.swagger_types):
             value = getattr(self, attr)
             if isinstance(value, list):
-                result[attr] = list(map(
-                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
-                    value
-                ))
+                result[attr] = list([x.to_dict() if hasattr(x, "to_dict") else x for x in value])
             elif hasattr(value, "to_dict"):
                 result[attr] = value.to_dict()
             elif isinstance(value, dict):
-                result[attr] = dict(map(
-                    lambda item: (item[0], item[1].to_dict())
-                    if hasattr(item[1], "to_dict") else item,
-                    value.items()
-                ))
+                result[attr] = dict([(item[0], item[1].to_dict())
+                    if hasattr(item[1], "to_dict") else item for item in list(value.items())])
             else:
                 result[attr] = value
 
diff --git a/idcheckio_python_client/models/mrz_response.py b/idcheckio_python_client/models/mrz_response.py
index 5c76545..e2aefad 100644
--- a/idcheckio_python_client/models/mrz_response.py
+++ b/idcheckio_python_client/models/mrz_response.py
@@ -83,18 +83,12 @@ class MrzResponse(object):
         for attr, _ in iteritems(self.swagger_types):
             value = getattr(self, attr)
             if isinstance(value, list):
-                result[attr] = list(map(
-                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
-                    value
-                ))
+                result[attr] = list([x.to_dict() if hasattr(x, "to_dict") else x for x in value])
             elif hasattr(value, "to_dict"):
                 result[attr] = value.to_dict()
             elif isinstance(value, dict):
-                result[attr] = dict(map(
-                    lambda item: (item[0], item[1].to_dict())
-                    if hasattr(item[1], "to_dict") else item,
-                    value.items()
-                ))
+                result[attr] = dict([(item[0], item[1].to_dict())
+                    if hasattr(item[1], "to_dict") else item for item in list(value.items())])
             else:
                 result[attr] = value
 
diff --git a/idcheckio_python_client/models/report_response.py b/idcheckio_python_client/models/report_response.py
index 2f3d10e..3a2a9c3 100644
--- a/idcheckio_python_client/models/report_response.py
+++ b/idcheckio_python_client/models/report_response.py
@@ -135,18 +135,12 @@ class ReportResponse(object):
         for attr, _ in iteritems(self.swagger_types):
             value = getattr(self, attr)
             if isinstance(value, list):
-                result[attr] = list(map(
-                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
-                    value
-                ))
+                result[attr] = list([x.to_dict() if hasattr(x, "to_dict") else x for x in value])
             elif hasattr(value, "to_dict"):
                 result[attr] = value.to_dict()
             elif isinstance(value, dict):
-                result[attr] = dict(map(
-                    lambda item: (item[0], item[1].to_dict())
-                    if hasattr(item[1], "to_dict") else item,
-                    value.items()
-                ))
+                result[attr] = dict([(item[0], item[1].to_dict())
+                    if hasattr(item[1], "to_dict") else item for item in list(value.items())])
             else:
                 result[attr] = value
 
diff --git a/idcheckio_python_client/models/result_response.py b/idcheckio_python_client/models/result_response.py
index 234f909..1f9bee9 100644
--- a/idcheckio_python_client/models/result_response.py
+++ b/idcheckio_python_client/models/result_response.py
@@ -291,18 +291,12 @@ class ResultResponse(object):
         for attr, _ in iteritems(self.swagger_types):
             value = getattr(self, attr)
             if isinstance(value, list):
-                result[attr] = list(map(
-                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
-                    value
-                ))
+                result[attr] = list([x.to_dict() if hasattr(x, "to_dict") else x for x in value])
             elif hasattr(value, "to_dict"):
                 result[attr] = value.to_dict()
             elif isinstance(value, dict):
-                result[attr] = dict(map(
-                    lambda item: (item[0], item[1].to_dict())
-                    if hasattr(item[1], "to_dict") else item,
-                    value.items()
-                ))
+                result[attr] = dict([(item[0], item[1].to_dict())
+                    if hasattr(item[1], "to_dict") else item for item in list(value.items())])
             else:
                 result[attr] = value
 
diff --git a/idcheckio_python_client/models/task_response.py b/idcheckio_python_client/models/task_response.py
index 9281b30..41645b0 100644
--- a/idcheckio_python_client/models/task_response.py
+++ b/idcheckio_python_client/models/task_response.py
@@ -291,18 +291,12 @@ class TaskResponse(object):
         for attr, _ in iteritems(self.swagger_types):
             value = getattr(self, attr)
             if isinstance(value, list):
-                result[attr] = list(map(
-                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
-                    value
-                ))
+                result[attr] = list([x.to_dict() if hasattr(x, "to_dict") else x for x in value])
             elif hasattr(value, "to_dict"):
                 result[attr] = value.to_dict()
             elif isinstance(value, dict):
-                result[attr] = dict(map(
-                    lambda item: (item[0], item[1].to_dict())
-                    if hasattr(item[1], "to_dict") else item,
-                    value.items()
-                ))
+                result[attr] = dict([(item[0], item[1].to_dict())
+                    if hasattr(item[1], "to_dict") else item for item in list(value.items())])
             else:
                 result[attr] = value
 
diff --git a/idcheckio_python_client/models/user_response.py b/idcheckio_python_client/models/user_response.py
index c042369..a7452ff 100644
--- a/idcheckio_python_client/models/user_response.py
+++ b/idcheckio_python_client/models/user_response.py
@@ -83,18 +83,12 @@ class UserResponse(object):
         for attr, _ in iteritems(self.swagger_types):
             value = getattr(self, attr)
             if isinstance(value, list):
-                result[attr] = list(map(
-                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
-                    value
-                ))
+                result[attr] = list([x.to_dict() if hasattr(x, "to_dict") else x for x in value])
             elif hasattr(value, "to_dict"):
                 result[attr] = value.to_dict()
             elif isinstance(value, dict):
-                result[attr] = dict(map(
-                    lambda item: (item[0], item[1].to_dict())
-                    if hasattr(item[1], "to_dict") else item,
-                    value.items()
-                ))
+                result[attr] = dict([(item[0], item[1].to_dict())
+                    if hasattr(item[1], "to_dict") else item for item in list(value.items())])
             else:
                 result[attr] = value
 
diff --git a/idcheckio_python_client/rest.py b/idcheckio_python_client/rest.py
index 25fc1ca..94b1a1b 100644
--- a/idcheckio_python_client/rest.py
+++ b/idcheckio_python_client/rest.py
@@ -22,7 +22,7 @@
     limitations under the License.
 """
 
-from __future__ import absolute_import
+
 
 import sys
 import io
@@ -48,7 +48,7 @@ try:
     from urllib.parse import urlencode
 except ImportError:
     # for python2
-    from urllib import urlencode
+    from urllib.parse import urlencode
 
 
 logger = logging.getLogger(__name__)
@@ -182,7 +182,7 @@ class RESTClientObject(object):
         # log response body
         logger.debug("response body: %s" % r.data)
 
-        if r.status not in chain(range(200, 206), 303):
+        if r.status not in chain(list(range(200, 206)), [303]):
             raise ApiException(http_resp=r)
 
         return r
